function execute_transport_function_params_analysis()
    
    addpath('../Common/');

    domain_name = 'matrix';
    domain_name = 'channel';
    
    loop_type = 3;
    loop_type_names = {'ksat', 'wt', 'length'};

    data_wt = load(sprintf('../Common/data_%s_loop_%s_domain.mat', loop_type_names{loop_type}, domain_name));
    
%     opt_params_hc = load('opt_params_hc.mat');
    opt_params_wt = load(sprintf('../Common/opt_params_%s_%s_domain.mat', loop_type_names{loop_type}, domain_name));
    param_obj = log_normal_params(sprintf('../Common/opt_params_%s_%s_domain.mat', loop_type_names{2}, domain_name));
    
    close all;
    
    %% Simple analysis
    
    switch loop_type
        case 1
            var_vector = opt_params_wt.k_sat_vector;
            var_name = 'Hydraulic conductivity';
            const_val = opt_params_wt.saturation_effective_avg(1);
            const_name = 'S_e_f_f';
        case 2
            var_vector = opt_params_wt.saturation_effective_avg;
            var_name = 'Effective saturation';
            const_val = opt_params_wt.van_genuchten_params.k_sat;
            const_name = 'k_s_a_t';
        case 3
            var_vector = data_wt.length_vector;
            var_name = 'length';
            const_val = opt_params_wt.van_genuchten_params.k_sat; % opt_params_wt.saturation_effective_avg(1);
            const_name = 'k_s_a_t'; % 'k_s_a_t = 1, S_e_f_f';
    end
    var_vector = roundn(var_vector, -8);
    
    if loop_type == 1
        plot(var_vector, opt_params_wt.mu);
        hold on;
        v = interp1(opt_params_wt.k_sat_vector, opt_params_wt.mu, 1, 'spline');
        plot(var_vector, log(1 ./ var_vector) + v, 'r');
        hold off;
    end
    
    if strcmp(domain_name, 'channel')
        params = [...
            1  -3.591343328774355   0.627683541859230
            2  -1.543401227941438   0.575656770633573
            3  -0.347030888887921   0.505470324081406
            4   0.489864404706695   0.452789653211952
            5   1.125761230074318   0.416137921685944
            6   1.637040838239214   0.386078225594304
            7   2.071569753316607   0.359702460639152
            8   2.444603884915021   0.337794759305909
            9   2.771373826777602   0.319354023683911
            10  3.057307258516914   0.305061474595060
            11  3.319815689110311   0.291095912161370
            12  3.558355466235488   0.279021892152877
            15  4.165523637388991   0.248883883402238
            20  4.938295909678931   0.216714692349713
            25  5.491785062780798   0.203072942513997
            30  5.987824885616615   0.183466071293290
            35  6.406889631230070   0.170815418817532
            40  6.774968121628166   0.163879402163050
            ];
        
        params_analytic = [...
            1  -3.604486216406896   0.624539882865586
            2  -1.543976309792604   0.577602110437876
            3  -0.345145184158094   0.507646499907616
            4   0.490437416684237   0.454621936202477
            5   1.128978321647244   0.414268999917745
            6   1.644619411234698   0.382532107763322
            7   2.076662426549802   0.356934161441096
            8   2.448279195993007   0.335818011437506
            9   2.774083678223008   0.317987643083503
            10   3.063939726610946   0.302644676935694
            11   3.324939709232366   0.289281980811490
            12   3.562322413212109   0.277536926521019
            13   3.780017502996207   0.267118551262472
            14   3.981027229505619   0.257788629665723
            15   4.167700771335082   0.249359339215410
            16   4.341924344510148   0.241689618858987
            17   4.505250316665935   0.234678278122751
            18   4.658967683274338   0.228246853503522
            19   4.804154799784436   0.222330675277809
            20   4.941716463923433   0.216871029616019
            21   5.072407573362371   0.211806652506534
            22   5.196865018382665   0.207079714783152
            23   5.315633351770839   0.202639557259596
            24   5.429183559416137   0.198443486568699
            25   5.537929364466105   0.194457943331811
            26   5.642256351129686   0.190670020177963
            27   5.742529043408111   0.187082944022814
            28   5.839085875531502   0.183705862403451
            29   5.932237315216739   0.180548709527432
            30   6.022265988072188   0.177619899284013
            31   6.109427944310250   0.174925492431515
            32   6.193954519282663   0.172469093247129
            33   6.276054445948589   0.170252076171936
            34   6.355916012736033   0.168273934823934
            35   6.433709147569523   0.166532650427910
            36   6.509587364234748   0.165025032692838
            37   6.583689541709226   0.163747015295183
            38   6.656141527963573   0.162693902634315
            39   6.727057571903896   0.161860571204491
            40   6.796541549204241   0.161241621269978
            ];
    else
        params = [...
            1  -0.048422552524084   0.623096531823893
            2   2.001571208075356   0.579269270459135
            3   3.194901592385712   0.510375790289142
            4   4.026532337781899   0.458424604958535
            5   4.662127131178955   0.418808271925065
            6   5.175901791855585   0.387574998183964
            7   5.606451780388892   0.362286798371136
            8   5.976455628266568   0.341401415584618
            9   6.300592134109041   0.323775230753939
            10   6.588877596306485   0.308722922458606
            11   6.848425083233550   0.295682614169379
            12   7.084431421268158   0.284260812709885
            15   7.685855938336549   0.256842203254154
            20   8.452875265450357   0.225115230403385
            25   9.042227332938968   0.203349502612364
            30   9.519919541447695   0.186983606032799
            35   9.924375932757584   0.176468750524087
            40  10.279481015344102   0.172144494622628
            ];
        
        params_analytic = [...
            1  -0.049063683090237   0.624566528592504
            2   2.011642878689097   0.577709515720861
            3   3.210513548602593   0.507729241909548
            4   4.046125410724189   0.454700016971496
            5   4.684659752037981   0.414330171370101
            6   5.200369726181486   0.382618692278247
            7   5.632398569411249   0.356998691183551
            8   6.003798676414362   0.335788851771718
            9   6.329371190538007   0.317892888193377
            10   6.619140436967442   0.302555506316532
            11   6.880196425016332   0.289241505538748
            12   7.117719086978179   0.277555754319821
            13   7.335579310535263   0.267187250161835
            14   7.536734874131209   0.257888187988573
            15   7.723504861527026   0.249467575290196
            16   7.897763782244855   0.241787153054330
            17   8.061072714076181   0.234753736803294
            18   8.214737676095957   0.228296905832591
            19   8.359855486410662   0.222358254725760
            20   8.497346031169926   0.216882515173950
            21   8.627971167154953   0.211807858082066
            22   8.752369250258306   0.207074055349269
            23   8.871083385591584   0.202627692887234
            24   8.984581726583102   0.198423608112639
            25   9.093274834269785   0.194426397770652
            26   9.197546606142287   0.190622775164427
            27   9.297761530149003   0.187016742804205
            28   9.394258962010158   0.183618678275800
            29   9.487350794097241   0.180439840362879
            30   9.577321294896818   0.177489895639431
            31   9.664428203148612   0.174776020964018
            32   9.748904488898217   0.172302785913485
            33   9.830960413065553   0.170072388188594
            34   9.910785661387434   0.168085020187830
            35   9.988551421991389   0.166339256868850
            36  10.064412335349093   0.164832414829870
            37  10.138508282534129   0.163560863627937
            38  10.210966000368812   0.162520285808078
            39  10.281900525369815   0.161705889214846
            40  10.351416430987859   0.161112567473597
        ];
    end;
    
    figure('OuterPosition', [100, 100, 600, 400]);
    subplot(2, 2, 1);
    subplot('Position', [0.1 0.3 0.35 0.65]);
    plot(var_vector, opt_params_wt.mu);
    if loop_type == 3
        hold on;
        plot(params(:, 1), params(:, 2), 'r');
        plot(params_analytic(:, 1), params_analytic(:, 2), 'k');
        hold off;
        legend_handle = legend('Richards', 'Log-normal TF (consecutive cells)', 'Log-normal TF (analytical params)', ...
            'Location', 'SouthEast');
        set(legend_handle, 'FontSize', 7);
    end
    if loop_type == 2
        ax = axis;
        ax(1:2) = [0.15, 1];
        axis(ax);
    end
    xlabel(var_name);
    ylabel('Mu');
    subplot(2, 2, 2);
    subplot('Position', [0.6 0.3 0.35 0.65]);
    plot(var_vector, opt_params_wt.sigma);
    if loop_type == 3
        hold on;
        plot(params(:, 1), params(:, 3), 'r');
        plot(params_analytic(:, 1), params_analytic(:, 3), 'k');
        hold off;
    end
    if loop_type == 2
        ax = axis;
        ax(3:4) = [0.6, 0.8];
        ax(1:2) = [0.15, 1];
        axis(ax);
    end
    xlabel(var_name);
    ylabel('Sigma');
    annotation('textbox', [0.1, 0.05, 0.85, 0.1], 'String', sprintf('%s = %3.3f, theta_r = %3.3f, theta_s = %3.3f, alpha = %3.2f, lambda = %3.2f', ...
        const_name, const_val, opt_params_wt.van_genuchten_params.theta_r, opt_params_wt.van_genuchten_params.theta_s, ...
        opt_params_wt.van_genuchten_params.alpha, opt_params_wt.van_genuchten_params.lambda));
    
%     %% Expression for mu
%     figure(2);
%     plot(var_vector, opt_params_wt.mu);
%     hold on;
%     v = -1.85;
%     plot(var_vector, log(1 ./ var_vector) + v, 'r');
%     hold off;
%     legend('mu', sprintf('log(1 / k_s_a_t) + %1.2f', v));
    
%     %% Water table loop
%     for i = 1:numel(data_wt.saturation_effective_avg)
%         t = data_wt.t_range(i, :);
%         [mu, sigm] = param_obj.get_params(data_wt.k_sat_vector(i), data_wt.saturation_effective_avg(i));
%         out_flux_approx = opt_params_wt.ratio(i) * ...
%             out_flux_lognrnd_pdf(t, mu, sigm);
%         close all;
%         hold on;
%         plot(t, data_wt.out_flux(i, :));
%         plot(t, out_flux_approx, 'g');
%         hold off;
%     end
    
    return

    function res = out_flux_lognrnd_pdf(t, muv, sigmav)
        res = -1 ./ (sqrt(2 * pi) .* sigmav .* t) .* exp(-(log(t) - muv).^2 ./ (2 .* sigmav.^2));
        res(1) = 0;
    end

end